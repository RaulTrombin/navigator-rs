name: Test all targets

on: [push, pull_request]

permissions:
  contents: write

jobs:
  quick-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          override: true
      - name: Check Type
        run: cargo fmt -- --check
      - name: Check Clippy
        run: cargo clippy -- -Dwarnings
      - name: Run internal tests
        run: cargo test --verbose -- --nocapture
      - name: Build
        run: cargo build

  build:
    needs: quick-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          override: true
      - name: Build docs
        run: cargo doc
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc


  bench:
    needs: quick-tests
    runs-on: self-hosted
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          override: true
      - name: Rust | Cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "rust-cache"
          shared-key: "benchmark"
      - name: Cargo Bench
        run:  cargo bench --jobs 1 --bench bench -- --output-format bencher | tee output.txt
      - name: Download previous benchmark data
        uses: actions/cache@v1
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      - name: Store benchmark result
        # if: github.ref == 'refs/heads/master'
        uses: benchmark-action/github-action-benchmark@v1.18.0
        with:
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          summary-always: true
          alert-threshold: "110%"
          fail-on-alert: true
          save-data-file : false

          # auto-push: true # push to gh-pages/dev/bench
      # - name: Get Main branch SHA
      #   if: github.ref != 'refs/heads/master'
      #   id: get-main-branch-sha
      #   run: |
      #     SHA=$(git rev-parse origin/main)
      #     echo "sha=$SHA" >> $GITHUB_OUTPUT

      # - name: Get benchmark JSON from main branch
      #   if: github.ref != 'refs/heads/master'
      #   uses: actions/cache/restore@v3.3.2
      #   with:
      #     path: ./cache/benchmark-data.json
      #     key: ${{ steps.get-main-branch-sha.outputs.sha }}-rust-benchmark
      #     fail-on-cache-miss: true

      # - name: Compare benchmarks
      #   uses: benchmark-action/github-action-benchmark@v1.18.0
      #   with:
      #     # What benchmark tool the output.txt came from
      #     tool: 'cargo'
      #     # Where the output from the benchmark tool is stored
      #     output-file-path: ${{ github.sha }}_bench_output.txt
      #     # Where the benchmarks in main are (to compare)
      #     external-data-json-path: ./cache/benchmark-data.json
      #     # Do not save the data
      #     save-data-file: false
      #     # Workflow will fail when an alert happens
      #     fail-on-alert: true
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     # Enable Job Summary for PRs
      #     summary-always: true

      # - name: Save benchmark JSON to cache
      #   uses: actions/cache/save@v3.3.2
      #   with:
      #     path: ./cache/benchmark-data.json
      #     # Save with commit hash to avoid "cache already exists"
      #     key: ${{ github.sha }}-rust-benchmark



  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v2
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
      - name: Install cargo-bump
        run: cargo install cargo-bump --force
      - name: Modify version with tag
        run: cargo bump ${{ github.ref_name }}
      - name: Automatic commit for crate version upgrade
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: master
          commit_message: "Cargo: Update the crate version to ${{ github.ref_name }}"
      - name: Publish to crates.io
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
